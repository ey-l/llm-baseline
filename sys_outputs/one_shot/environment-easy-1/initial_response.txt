```json
[
    {
        "id": "environment-easy-1",
        "query": "In 2018, how many bacterial exceedances were observed in freshwater beaches?",
        "data_sources": ["water-body-testing-2018.csv", "precipitations_beaches_community.csv"]
    },
    {
        "id": "environment-easy-1-1",
        "query": "Which column indicates a bacterial exceedance?",
        "data_sources": ["water-body-testing-2018.csv"]
    },
    {
        "id": "environment-easy-1-2",
        "query": "Which rows correspond to freshwater beaches?",
        "data_sources": ["water-body-testing-2018.csv"]
    },
    {
        "id": "environment-easy-1-3",
        "query": "Which rows are from the year 2018?",
        "data_sources": ["water-body-testing-2018.csv"]
    }
]
```

```python
import pandas as pd
import json

def count_exceedances(file_path, year, beach_type, violation_col='Violation', beach_type_col='Beach Type Description'):
    # Load the dataset
    data = pd.read_csv(file_path)

    # Filter for the desired year
    data['Year'] = data['Year'].astype(str)
    year_data = data[data['Year'] == str(year)]

    # Further filter for the desired beach type
    fresh_beach_data = year_data[year_data[beach_type_col] == beach_type]

    # Count the exceedances
    exceedances = fresh_beach_data[violation_col].str.lower() == 'yes'

    return exceedances.sum()

# Define file paths
water_body_testing_2018_file = '/Users/eylai/Projects/llm-baseline/reference_systems/../../LLMBenchmark/data/environment/water-body-testing-2018.csv'

# Get the number of bacterial exceedances for freshwater beaches in 2018
number_of_exceedances = count_exceedances(water_body_testing_2018_file, 2018, 'Fresh')

# Prepare the results
results = {
    "environment-easy-1-1": "Violation",
    "environment-easy-1-2": "Fresh",
    "environment-easy-1-3": 2018,
    "environment-easy-1": number_of_exceedances
}

# Print the results
print(json.dumps(results, indent=4))
```